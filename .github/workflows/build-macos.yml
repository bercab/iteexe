name: build-macos

on: [push]

jobs:
  build-macos:
    runs-on: macos-10.15

    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      PYTHON_CONFIGURE_OPTS: --enable-shared
      DEVELOPER_DIR: /Applications/Xcode_10.3.app/Contents/Developer
      SDKROOT: /Applications/Xcode_10.3.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.14.sdk
      MACOSX_DEPLOYMENT_TARGET: 10.14

    steps:

      - name: Clear any existing tool cache
        run: |
          mv "${{ runner.tool_cache }}" "${{ runner.tool_cache }}.old"
          mkdir -p "${{ runner.tool_cache }}"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Install macOS build requirements
        run: |
          echo "--> Xcode developer dir contents"
          ls -n /Applications/ | grep Xcode*
          brew install libtiff libjpeg webp little-cms2
          brew uninstall --ignore-dependencies openssl@1.1
          #echo "--> brew list:"
          #brew list 
          #echo "--> brew install openssl@1.1:"
          #brew install --build-from-source openssl@1.1
          #brew link openssl@1.1 --force
          #echo "--> brew prefix :"
          #brew --prefix openssl@3
          brew install libxml2
          #export LDFLAGS="-L/usr/local/opt/openssl@3/lib"
          #export CPPFLAGS="-I/usr/local/opt/openssl@3/include"
          brew install pyenv
          pyenv install 2.7.18 
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          #echo 'export PYENV_ROOT="$HOME/.pyenv"' >> /etc/profile
          #echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> /etc/profile
          #echo 'eval "$(pyenv init -)"' >> /etc/profile
          pyenv local 2.7.18
          pip install --upgrade pip


#      - name: Install required python and pip
#        uses: gabrielfalcao/pyenv-action@v10
#        with:
#          default: 2.7.18
#          command: |
#            easy_install pip
#            pip install --upgrade pip

      - name: Install Python requirements
        run: |
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          pip install pycrypto --no-binary :all:
          pip install lxml==2.2.8
          pip install py2app==0.24
          pip install Pillow==5.3.0
          pip install zope.interface
          pip install chardet
          pip install gitpython
          pip install suds
          pip install requests-oauthlib
          pip install python-dateutil
          pip install httplib2
          pip install beautifulsoup4
          pip install feedparser
          pip install oauthlib
          pip install webassets
          pip install cssmin
          pyenv rehash
      - name: Create disk image
        run: hdiutil create -volname exe -size 500m -layout GPTSPUD -fs 'Journaled HFS+' -type UDIF installs/osx/exe

      - name: Build package
        run: |
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init -)"
          brew install npm
          echo "--> Installing appdmg" 
          npm install -g appdmg
          which appdmg
          echo "--> Installing appdmg" 
          npm install  appdmg
          which appdmg
          ls -l /usr/local/bin/appdmg
          echo "--> bin:"
          ls -l /usr/local/bin
          cd installs/osx
          echo "--> Creating python app and DMG image..."
          python make.py -p
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: exe-macos
          path: installs/osx/INTEF-exe-*.dmg
